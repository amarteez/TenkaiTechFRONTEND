{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\TenkaiFront\\\\src\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport axios from 'axios';\nimport React, { createContext, useContext, useEffect, useReducer } from 'react';\n\n// Acciones\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ADD_TO_CART = 'ADD_TO_CART';\nconst SET_CART_ITEMS = 'SET_CART_ITEMS';\nconst REMOVE_FROM_CART = 'REMOVE_FROM_CART';\n\n// Crear contexto de carrito\nconst CartContext = /*#__PURE__*/createContext();\n\n// Reducer para manejar el estado del carrito\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      // Si el producto ya está en el carrito, actualiza la cantidad\n      const existingItemIndex = state.findIndex(item => item.id === action.payload.id);\n      if (existingItemIndex >= 0) {\n        const updatedCart = [...state];\n        updatedCart[existingItemIndex].quantity += action.payload.quantity;\n        return updatedCart;\n      }\n      // Si el producto no está en el carrito, lo agrega\n      return [...state, action.payload];\n    case SET_CART_ITEMS:\n      return action.payload;\n    case REMOVE_FROM_CART:\n      return state.filter(item => item.id !== action.payload);\n    default:\n      return state;\n  }\n};\n\n// Proveedor del contexto de carrito\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, dispatch] = useReducer(cartReducer, []);\n  useEffect(() => {\n    const fetchCartItems = async () => {\n      try {\n        const response = await axios.get('https://tenkaitechbackend.onrender.com/api/cart/');\n        dispatch({\n          type: SET_CART_ITEMS,\n          payload: response.data\n        });\n      } catch (error) {\n        console.error('Error fetching cart items:', error);\n      }\n    };\n    fetchCartItems();\n  }, []);\n  const addToCart = async product => {\n    try {\n      const response = await axios.post('https://tenkaitechbackend.onrender.com/api/cart/add/', {\n        product_id: product.id,\n        quantity: 1 // Puedes ajustar la cantidad según sea necesario\n      });\n      const cartItem = {\n        id: response.data.id,\n        product_id: product.id,\n        name: product.name,\n        price: product.price,\n        quantity: 1 // Puedes ajustar la cantidad según sea necesario\n      };\n      dispatch({\n        type: ADD_TO_CART,\n        payload: cartItem\n      });\n    } catch (error) {\n      console.error('Error adding to cart:', error);\n    }\n  };\n  const removeFromCart = async cartItemId => {\n    try {\n      await axios.post('https://tenkaitechbackend.onrender.com/api/cart/remove/', {\n        cart_item_id: cartItemId\n      });\n      dispatch({\n        type: REMOVE_FROM_CART,\n        payload: cartItemId\n      });\n    } catch (error) {\n      console.error('Error removing from cart:', error);\n    }\n  };\n  const getCartTotal = () => {\n    const total = cart.reduce((sum, item) => {\n      if (!item.price) {\n        console.error('Producto indefinido en carrito:', item);\n        return sum;\n      }\n      return sum + parseFloat(item.price) * item.quantity;\n    }, 0);\n    const itbms = total * 0.07;\n    return {\n      total,\n      itbms,\n      grandTotal: total + itbms\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart,\n      getCartTotal\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n\n// Hook para usar el contexto de carrito\n_s(CartProvider, \"pj6DG2lu959f9ctyXhqQVFIHgJ4=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["axios","React","createContext","useContext","useEffect","useReducer","jsxDEV","_jsxDEV","ADD_TO_CART","SET_CART_ITEMS","REMOVE_FROM_CART","CartContext","cartReducer","state","action","type","existingItemIndex","findIndex","item","id","payload","updatedCart","quantity","filter","CartProvider","children","_s","cart","dispatch","fetchCartItems","response","get","data","error","console","addToCart","product","post","product_id","cartItem","name","price","removeFromCart","cartItemId","cart_item_id","getCartTotal","total","reduce","sum","parseFloat","itbms","grandTotal","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/TenkaiFront/src/CartContext.js"],"sourcesContent":["import axios from 'axios';\nimport React, { createContext, useContext, useEffect, useReducer } from 'react';\n\n// Acciones\nconst ADD_TO_CART = 'ADD_TO_CART';\nconst SET_CART_ITEMS = 'SET_CART_ITEMS';\nconst REMOVE_FROM_CART = 'REMOVE_FROM_CART';\n\n// Crear contexto de carrito\nconst CartContext = createContext();\n\n// Reducer para manejar el estado del carrito\nconst cartReducer = (state, action) => {\n    switch (action.type) {\n        case ADD_TO_CART:\n            // Si el producto ya está en el carrito, actualiza la cantidad\n            const existingItemIndex = state.findIndex(item => item.id === action.payload.id);\n            if (existingItemIndex >= 0) {\n                const updatedCart = [...state];\n                updatedCart[existingItemIndex].quantity += action.payload.quantity;\n                return updatedCart;\n            }\n            // Si el producto no está en el carrito, lo agrega\n            return [...state, action.payload];\n        case SET_CART_ITEMS:\n            return action.payload;\n        case REMOVE_FROM_CART:\n            return state.filter(item => item.id !== action.payload);\n        default:\n            return state;\n    }\n};\n\n// Proveedor del contexto de carrito\nexport const CartProvider = ({ children }) => {\n    const [cart, dispatch] = useReducer(cartReducer, []);\n\n    useEffect(() => {\n        const fetchCartItems = async () => {\n            try {\n                const response = await axios.get('https://tenkaitechbackend.onrender.com/api/cart/');\n                dispatch({ type: SET_CART_ITEMS, payload: response.data });\n            } catch (error) {\n                console.error('Error fetching cart items:', error);\n            }\n        };\n\n        fetchCartItems();\n    }, []);\n\n    const addToCart = async (product) => {\n        try {\n            const response = await axios.post('https://tenkaitechbackend.onrender.com/api/cart/add/', {\n                product_id: product.id,\n                quantity: 1, // Puedes ajustar la cantidad según sea necesario\n            });\n            const cartItem = {\n                id: response.data.id,\n                product_id: product.id,\n                name: product.name,\n                price: product.price,\n                quantity: 1, // Puedes ajustar la cantidad según sea necesario\n            };\n            dispatch({ type: ADD_TO_CART, payload: cartItem });\n        } catch (error) {\n            console.error('Error adding to cart:', error);\n        }\n    };\n\n    const removeFromCart = async (cartItemId) => {\n        try {\n            await axios.post('https://tenkaitechbackend.onrender.com/api/cart/remove/', {\n                cart_item_id: cartItemId\n            });\n            dispatch({ type: REMOVE_FROM_CART, payload: cartItemId });\n        } catch (error) {\n            console.error('Error removing from cart:', error);\n        }\n    };\n\n    const getCartTotal = () => {\n        const total = cart.reduce((sum, item) => {\n            if (!item.price) {\n                console.error('Producto indefinido en carrito:', item);\n                return sum;\n            }\n            return sum + (parseFloat(item.price) * item.quantity);\n        }, 0);\n        const itbms = total * 0.07;\n        return {\n            total,\n            itbms,\n            grandTotal: total + itbms\n        };\n    };\n\n    return (\n        <CartContext.Provider value={{ cart, addToCart, removeFromCart, getCartTotal }}>\n            {children}\n        </CartContext.Provider>\n    );\n};\n\n// Hook para usar el contexto de carrito\nexport const useCart = () => {\n    return useContext(CartContext);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}